name: CI

on:
  push:
  pull_request:

jobs:
  test:
    name: Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install tooling
        run: |
          python -m pip install --upgrade pip
          pip install nox

      - name: Lint
        if: matrix.python-version == '3.13'
        run: nox -s lint

      - name: Check manifest
        if: matrix.python-version == '3.13'
        run: nox -s check-manifest

      - name: Run tests
        run: nox -s tests

      - name: Upload coverage to Codecov
        if: matrix.python-version == '3.13'
        uses: codecov/codecov-action@v3

  release:
    name: Create Release
    needs: test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags')
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install build backend
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build distribution
        run: python -m build

      - uses: actions/upload-artifact@v4
        with:
          name: release
          path: dist
          if-no-files-found: error

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  deploy:
    runs-on: ubuntu-latest
    needs: release
    if: startsWith(github.ref, 'refs/tags')
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4.1.7
        with:
          name: release
          path: dist/

      - name: Publish a Python distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.pypi_token }}
